# Prometheus Configuration
# This configuration scrapes metrics from the OpenTelemetry collector and other services

global:
  # How frequently to scrape targets by default
  scrape_interval: 15s
  # How long until a scrape request times out
  scrape_timeout: 10s
  # How frequently to evaluate rules
  evaluation_interval: 15s

# Alertmanager configuration (optional)
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# Scrape configuration
scrape_configs:
  # OpenTelemetry Collector internal metrics
  - job_name: 'otel-collector-internal'
    static_configs:
      - targets: ['otel-collector:8888']
    scrape_interval: 10s
    metrics_path: /metrics

  # OpenTelemetry Collector Prometheus exporter
  - job_name: 'otel-collector-exporter'
    static_configs:
      - targets: ['otel-collector:8889']
    scrape_interval: 15s
    metrics_path: /metrics

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Grafana metrics (if available)
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Jaeger metrics (if available)
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    scrape_interval: 30s
    metrics_path: /metrics

  # Elasticsearch metrics (if node_exporter or similar is available)
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    scrape_interval: 30s
    metrics_path: /_prometheus/metrics
    # Elasticsearch doesn't expose Prometheus metrics by default
    # This would require elasticsearch-exporter or similar
    scrape_timeout: 5s
    honor_labels: true
    # This job might fail without proper exporter, that's okay
    sample_limit: 10000

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "http://remote-storage:9090/api/v1/write"

# Remote read configuration (optional)
# remote_read:
#   - url: "http://remote-storage:9090/api/v1/read"
