services:
  collector:
    image: grafana/otel-lgtm
    ports:
      - 3000:3000
      - 4317:4317
      - 4318:4318
    healthcheck:
      test: test -f /tmp/ready
      interval: 1s
      start_period: 3s

  # Sample application using otel-logger as entrypoint
  sample-app:
    image: alpine:latest
    volumes:
      - ../otel-logger:/usr/local/bin/otel-logger:ro
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_SERVICE_NAME=sample-application
    depends_on:
      collector:
        condition: service_healthy
    command: >-
      otel-logger
      --batch-size 50
      --flush-interval 5s
      --
      sh -c "
        echo 'Starting sample application...';
        while true; do
          echo '{\"timestamp\":\"'$(date -Iseconds)'\",\"level\":\"info\",\"message\":\"Heartbeat from sample app\",\"counter\":'$$((RANDOM%100))'}';
          echo '{\"timestamp\":\"'$(date -Iseconds)'\",\"level\":\"debug\",\"message\":\"Debug message\",\"thread\":\"worker-1\"}' >&2;
          sleep 5;
        done
      "

  # Another sample app showing different logging patterns
  json-app:
    image: alpine:latest
    volumes:
      - ../otel-logger:/usr/local/bin/otel-logger:ro
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=collector:4317
      - OTEL_SERVICE_NAME=sample-application
    depends_on:
      collector:
        condition: service_healthy
    command: >-
      /usr/local/bin/otel-logger
      --timestamp-fields timestamp,ts
      --level-fields level,severity
      --message-fields message,msg
      --
      sh -c '
        echo \"Starting JSON application...\";
        for i in \$$(seq 1 10); do
          echo \"{\\\"ts\\\":\\\"\$$(date -Iseconds)\\\",\\\"level\\\":\\\"info\\\",\\\"message\\\":\\\"Processing item $$i\\\",\\\"item_id\\\":$$i}\";
          echo \"{\\\"timestamp\\\":\\\"\$$(date -Iseconds)\\\",\\\"severity\\\":\\\"warn\\\",\\\"msg\\\":\\\"Warning for item $$i\\\",\\\"item_id\\\":$$i}\" >&2;
          sleep 2;
        done;
        echo \"JSON application completed\";
      '

  # Traditional application that outputs plain text logs
  text-app:
    image: alpine:latest
    volumes:
      - ../otel-logger:/usr/local/bin/otel-logger:ro
    depends_on:
      collector:
        condition: service_healthy
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=collector:4317
      - OTEL_SERVICE_NAME=text-logger
    command: >-
      /usr/local/bin/otel-logger
      --json-prefix '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[Z0-9:+-]*\s*'
      --
      sh -c '
        echo \"Starting text application...\";
        for i in \$$(seq 1 5); do
          echo \"\$$(date -Iseconds) INFO: Processing request $$i\";
          echo \"\$$(date -Iseconds) ERROR: Simulated error for request $$i\" >&2;
          echo \"\$$(date -Iseconds) {\\\"level\\\":\\\"debug\\\",\\\"message\\\":\\\"Mixed format log\\\",\\\"request_id\\\":$$i}\";
          sleep 3;
        done;
        echo \"Text application completed\";
      '
