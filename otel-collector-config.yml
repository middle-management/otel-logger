# OpenTelemetry Collector Configuration
# This configuration sets up receivers, processors, and exporters for logs, traces, and metrics

receivers:
  # OTLP receiver for gRPC and HTTP protocols
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - http://*
            - https://*

  # Prometheus receiver for scraping metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']

processors:
  # Batch processor to reduce the number of outgoing connections
  batch:
    timeout: 1s
    send_batch_size: 1024

  # Memory limiter to prevent OOM issues
  memory_limiter:
    limit_mib: 512

  # Resource processor to add/modify resource attributes
  resource:
    attributes:
      - key: environment
        value: development
        action: upsert
      - key: collector.version
        value: "latest"
        action: insert

  # Attributes processor for logs
  attributes/logs:
    actions:
      - key: log.source
        value: otel-logger-cli
        action: insert

  # Transform processor for advanced log processing
  transform/logs:
    log_statements:
      - context: log
        statements:
          - set(severity_text, "INFO") where severity_number == 9
          - set(severity_text, "WARN") where severity_number == 13
          - set(severity_text, "ERROR") where severity_number == 17

exporters:
  # Console/logging exporter for debugging
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  # Jaeger exporter for traces
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # OTLP HTTP exporter (can be used for other OTEL-compatible backends)
  otlphttp:
    endpoint: http://jaeger:14268/api/traces
    tls:
      insecure: true

  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      environment: development

  # Elasticsearch exporter for logs
  elasticsearch:
    endpoints:
      - http://elasticsearch:9200
    logs_index: otel-logs
    mapping:
      mode: raw
    timeout: 30s

  # Loki exporter for logs (alternative to Elasticsearch)
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    tenant_id: "otel-logs"
    labels:
      attributes:
        service.name: "service_name"
        level: "level"
      resource:
        environment: "environment"

  # File exporter for local storage/debugging
  file/logs:
    path: /tmp/otel-logs.json
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 3

  # File exporter for traces
  file/traces:
    path: /tmp/otel-traces.json
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 3

  # File exporter for metrics
  file/metrics:
    path: /tmp/otel-metrics.json
    rotation:
      max_megabytes: 100
      max_days: 7
      max_backups: 3

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133

  # pprof extension for performance profiling
  pprof:
    endpoint: 0.0.0.0:1777

  # zpages extension for component status
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]

  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging, jaeger, file/traces]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [logging, prometheus, file/metrics]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, attributes/logs, transform/logs, batch, resource]
      exporters: [logging, elasticsearch, loki, file/logs]

  # Telemetry settings for the collector itself
  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
      level: detailed

    # Resource attributes for collector telemetry
    resource:
      service.name: "otel-collector"
      service.version: "latest"
